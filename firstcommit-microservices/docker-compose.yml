# La 'version' es obsoleta en las versiones modernas de Docker Compose.
# Se puede eliminar de forma segura.
version: '3.8'

services:
  # ======================================================
  #           BASES DE DATOS
  # ======================================================

  db-iam:
    image: mysql:5.7
    container_name: db-iam
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_IAM_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_IAM_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${DB_IAM_PORT}:3306" # ej. 3306
    networks:
      - neolearn-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${DB_IAM_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-courses:
    image: mysql:5.7
    container_name: db-courses
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_COURSES_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_COURSES_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${DB_COURSES_PORT}:3306" # ej. 3307
    networks:
      - neolearn-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${DB_COURSES_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-roadmaps:
    image: mysql:5.7
    container_name: db-roadmaps
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_ROADMAPS_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROADMAPS_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${DB_ROADMAPS_PORT}:3306" # ej. 3308
    networks:
      - neolearn-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${DB_ROADMAPS_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-projects:
    image: mysql:5.7
    container_name: db-projects
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_PROJECTS_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PROJECTS_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${DB_PROJECTS_PORT}:3306" # ej. 3309
    networks:
      - neolearn-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${DB_PROJECTS_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-membership:
    image: mysql:5.7
    container_name: db-membership
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_MEMBERSHIP_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_MEMBERSHIP_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${DB_MEMBERSHIP_PORT}:3306" # ej. 3310
    networks:
      - neolearn-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${DB_MEMBERSHIP_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ======================================================
  #           MICROSERVICIOS
  # ======================================================

  iam-service:
    build:
      context: ./iam-service
    container_name: iam-service
    restart: unless-stopped
    depends_on:
      db-iam:
        condition: service_healthy
      discovery-server:
        condition: service_started
    networks:
      - neolearn-network
    environment:
      - SPRING_APPLICATION_NAME=iam-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-iam:3306/${DB_IAM_NAME}
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${DB_IAM_ROOT_PASSWORD}

  courses-service:
    build:
      context: ./courses-service
    container_name: courses-service
    restart: unless-stopped
    depends_on:
      db-courses:
        condition: service_healthy
      discovery-server:
        condition: service_started
    networks:
      - neolearn-network
    environment:
      - SPRING_APPLICATION_NAME=courses-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-courses:3306/${DB_COURSES_NAME}
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${DB_COURSES_ROOT_PASSWORD}

  roadmaps-service:
    build:
      context: ./roadmaps-service
    container_name: roadmaps-service
    restart: unless-stopped
    depends_on:
      db-roadmaps:
        condition: service_healthy
      discovery-server:
        condition: service_started
    networks:
      - neolearn-network
    environment:
      - SPRING_APPLICATION_NAME=roadmaps-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-roadmaps:3306/${DB_ROADMAPS_NAME}
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${DB_ROADMAPS_ROOT_PASSWORD}

  projects-service:
    build:
      context: ./projects-service
    container_name: projects-service
    restart: unless-stopped
    depends_on:
      db-projects:
        condition: service_healthy
      discovery-server:
        condition: service_started
    networks:
      - neolearn-network
    environment:
      - SPRING_APPLICATION_NAME=projects-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-projects:3306/${DB_PROJECTS_NAME}
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${DB_PROJECTS_ROOT_PASSWORD}

  memberships-service:
    build:
      context: ./memberships-service
    container_name: memberships-service
    restart: unless-stopped
    depends_on:
      db-membership:
        condition: service_healthy
      discovery-server:
        condition: service_started
    networks:
      - neolearn-network

    environment:
      - SPRING_APPLICATION_NAME=membership-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-membership:3306/${DB_MEMBERSHIP_NAME}
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${DB_MEMBERSHIP_ROOT_PASSWORD}

  # ======================================================
  #           INFRAESTRUCTURA CORE
  # ======================================================
  discovery-server:
      build:
       context: ./discovery-server
      container_name: discovery-server
      restart: unless-stopped
      ports:
       - "8761:8761" # Puerto estándar de Eureka
      networks:
      - neolearn-network

  gateway-server:
    build:
      context: ./gateway-server
    container_name: gateway-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - neolearn-network
    depends_on:
      - discovery-server
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED=true
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWERCASE_SERVICE_ID=true

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.4 # Usamos una imagen oficial de Keycloak
    container_name: keycloak
    restart: unless-stopped
    ports:
      - "9090:8080" # Mapeamos el puerto 8080 de Keycloak al 9090 de tu máquina para evitar conflictos
    networks:
      - neolearn-network
    environment:
      # Credenciales para el usuario administrador de Keycloak
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      # Para iniciar en modo desarrollo y evitar la necesidad de HTTPS
      - KC_HTTP_ENABLED=true
      - KC_HTTP_PORT=8080
      # Para que Keycloak pueda ser accedido desde el exterior a través de localhost
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME=localhost
    # Comando para iniciar Keycloak
    command:
      - start-dev
# ======================================================
#           RED COMÚN
# ======================================================
networks:
  neolearn-network:
    driver: bridge